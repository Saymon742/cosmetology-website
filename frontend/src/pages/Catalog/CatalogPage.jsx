import React, { useState, useEffect } from 'react';
import { useCart } from '../../context/CartContext';
import './CatalogPage.css';

const CatalogPage = () => {
  const [products, setProducts] = useState([]);
  const [filteredProducts, setFilteredProducts] = useState([]);
  const [categories] = useState([
    { id: 'all', name: '–í—Å—ñ —Ç–æ–≤–∞—Ä–∏' },
    { id: 'face', name: '–î–æ–≥–ª—è–¥ –∑–∞ –æ–±–ª–∏—á—á—è–º' },
    { id: 'body', name: '–î–æ–≥–ª—è–¥ –∑–∞ —Ç—ñ–ª–æ–º' },
    { id: 'hair', name: '–î–æ–≥–ª—è–¥ –∑–∞ –≤–æ–ª–æ—Å—Å—è–º' },
    { id: 'makeup', name: '–î–µ–∫–æ—Ä–∞—Ç–∏–≤–Ω–∞ –∫–æ—Å–º–µ—Ç–∏–∫–∞' },
    { id: 'perfume', name: '–ü–∞—Ä—Ñ—É–º–µ—Ä—ñ—è' }
  ]);
  const [selectedCategory, setSelectedCategory] = useState('all');
  const [sortBy, setSortBy] = useState('name');
  const [searchTerm, setSearchTerm] = useState('');
  const { addToCart } = useCart();

  useEffect(() => {
    const mockProducts = [
      {
        id: 1, name: '–û–º–æ–ª–æ–¥–∂—É—é—á–∏–π –∫—Ä–µ–º –∑ –≥—ñ–∞–ª—É—Ä–æ–Ω–æ–≤–æ—é –∫–∏—Å–ª–æ—Ç–æ—é', 
        price: 2500, category: 'face', image: 'üíÜ‚Äç‚ôÄÔ∏è',
        description: '–ì–ª–∏–±–æ–∫–µ –∑–≤–æ–ª–æ–∂–µ–Ω–Ω—è —Ç–∞ —Ä–æ–∑–≥–ª–∞–¥–∂—É–≤–∞–Ω–Ω—è –∑–º–æ—Ä—à–æ–∫', 
        rating: 4.8, inStock: true
      },
      {
        id: 2, name: '–í—ñ—Ç–∞–º—ñ–Ω–Ω–∞ —Å–∏—Ä–æ–≤–∞—Ç–∫–∞ –∑ –≤—ñ—Ç–∞–º—ñ–Ω–æ–º C', 
        price: 1800, category: 'face', image: 'üíß',
        description: '–û—Å–≤—ñ—Ç–ª–µ–Ω–Ω—è —Ç–∞ —Å—è–π–≤–æ —à–∫—ñ—Ä–∏', 
        rating: 4.6, inStock: true
      },
      {
        id: 3, name: '–ù–∞—Ç—É—Ä–∞–ª—å–Ω–∞ –º–∞—Ç–æ–≤–∞ –ø–æ–º–∞–¥–∞', 
        price: 1200, category: 'makeup', image: 'üíÑ',
        description: '–°—Ç—ñ–π–∫–µ –ø–æ–∫—Ä–∏—Ç—Ç—è –Ω–∞ 12 –≥–æ–¥–∏–Ω', 
        rating: 4.9, inStock: true
      },
      {
        id: 4, name: '–û—á–∏—â–∞—é—á–∏–π –≥–µ–ª—å –¥–ª—è –≤–º–∏–≤–∞–Ω–Ω—è', 
        price: 800, category: 'face', image: 'üßº',
        description: "–ú'—è–∫–µ –æ—á–∏—â–µ–Ω–Ω—è –±–µ–∑ —Å—É—Ö–æ—Å—Ç—ñ", 
        rating: 4.5, inStock: true
      },
      {
        id: 5, name: '–ù—ñ—á–Ω–∏–π –∫—Ä–µ–º –∑ —Ä–µ—Ç–∏–Ω–æ–ª–æ–º', 
        price: 3200, category: 'face', image: 'üåô',
        description: '–Ü–Ω—Ç–µ–Ω—Å–∏–≤–Ω–µ –≤—ñ–¥–Ω–æ–≤–ª–µ–Ω–Ω—è —à–∫—ñ—Ä–∏', 
        rating: 4.7, inStock: true
      },
      {
        id: 6, name: "–¢—É—à –¥–ª—è –≤—ñ–π –æ–±'—î–º–Ω–∞", 
        price: 950, category: 'makeup', image: 'üëÅÔ∏è',
        description: '–ï—Ñ–µ–∫—Ç –Ω–∞–∫–ª–∞–¥–Ω–∏—Ö –≤—ñ–π', 
        rating: 4.8, inStock: true
      },
      {
        id: 7, name: '–ó–≤–æ–ª–æ–∂—É—é—á–∏–π –ª–æ—Å—å–π–æ–Ω –¥–ª—è —Ç—ñ–ª–∞', 
        price: 1500, category: 'body', image: 'üõÅ',
        description: '–ù—ñ–∂–Ω–∞ —Ç–µ–∫—Å—Ç—É—Ä–∞ –¥–ª—è —â–æ–¥–µ–Ω–Ω–æ–≥–æ –¥–æ–≥–ª—è–¥—É', 
        rating: 4.4, inStock: true
      },
      {
        id: 8, name: "–®–∞–º–ø—É–Ω—å –¥–ª—è –æ–±'—î–º—É –≤–æ–ª–æ—Å—Å—è", 
        price: 1300, category: 'hair', image: 'üíá‚Äç‚ôÄÔ∏è',
        description: "–ù–∞–¥–∞—î –æ–±'—î–º —Ç–∞ –±–ª–∏—Å–∫", 
        rating: 4.6, inStock: true
      }
    ];

    setProducts(mockProducts);
    setFilteredProducts(mockProducts);
  }, []);

  useEffect(() => {
    let filtered = products;

    if (selectedCategory !== 'all') {
      filtered = filtered.filter(product => product.category === selectedCategory);
    }

    if (searchTerm) {
      filtered = filtered.filter(product =>
        product.name.toLowerCase().includes(searchTerm.toLowerCase()) ||
        product.description.toLowerCase().includes(searchTerm.toLowerCase())
      );
    }

    filtered.sort((a, b) => {
      switch (sortBy) {
        case 'price-asc': return a.price - b.price;
        case 'price-desc': return b.price - a.price;
        case 'rating': return b.rating - a.rating;
        case 'name': return a.name.localeCompare(b.name);
        default: return 0;
      }
    });

    setFilteredProducts(filtered);
  }, [products, selectedCategory, sortBy, searchTerm]);

  return (
    <div className="catalog-page">
      <div className="container">
        <div className="catalog-header">
          <h1>–ö–∞—Ç–∞–ª–æ–≥ —Ç–æ–≤–∞—Ä—ñ–≤</h1>
          <p>–ó–Ω–∞–π–¥—ñ—Ç—å —ñ–¥–µ–∞–ª—å–Ω—ñ –∑–∞—Å–æ–±–∏ –¥–ª—è –≤–∞—à–æ—ó –∫—Ä–∞—Å–∏</p>
        </div>

        <div className="catalog-controls">
          <div className="search-box">
            <input
              type="text"
              placeholder="üîç –ü–æ—à—É–∫ —Ç–æ–≤–∞—Ä—ñ–≤..."
              value={searchTerm}
              onChange={(e) => setSearchTerm(e.target.value)}
              className="search-input"
            />
          </div>

          <div className="filters">
            <select 
              value={selectedCategory} 
              onChange={(e) => setSelectedCategory(e.target.value)}
              className="filter-select"
            >
              {categories.map(category => (
                <option key={category.id} value={category.id}>
                  {category.name}
                </option>
              ))}
            </select>

            <select 
              value={sortBy} 
              onChange={(e) => setSortBy(e.target.value)}
              className="filter-select"
            >
              <option value="name">–ó–∞ –Ω–∞–∑–≤–æ—é</option>
              <option value="price-asc">–ó–∞ —Ü—ñ–Ω–æ—é (–∑—Ä–æ—Å—Ç–∞–Ω–Ω—è)</option>
              <option value="price-desc">–ó–∞ —Ü—ñ–Ω–æ—é (—Å–ø–∞–¥–∞–Ω–Ω—è)</option>
              <option value="rating">–ó–∞ —Ä–µ–π—Ç–∏–Ω–≥–æ–º</option>
            </select>
          </div>
        </div>

        <div className="products-info">
          <span>–ó–Ω–∞–π–¥–µ–Ω–æ —Ç–æ–≤–∞—Ä—ñ–≤: {filteredProducts.length}</span>
        </div>

        <div className="catalog-grid">
          {filteredProducts.map(product => (
            <div key={product.id} className="product-card">
              <div className="product-image">
                <span className="product-emoji">{product.image}</span>
                <div className="product-rating">
                  ‚≠ê {product.rating}
                </div>
                {!product.inStock && (
                  <div className="out-of-stock">–ù–µ–º–∞—î –≤ –Ω–∞—è–≤–Ω–æ—Å—Ç—ñ</div>
                )}
              </div>
              
              <div className="product-info">
                <h3>{product.name}</h3>
                <p>{product.description}</p>
                
                <div className="product-footer">
                  <div className="price">{product.price} ‚Ç¥</div>
                  <button 
                    className={`add-to-cart-btn ${!product.inStock ? 'disabled' : ''}`}
                    onClick={() => product.inStock && addToCart(product)}
                    disabled={!product.inStock}
                  >
                    {product.inStock ? '–í –∫–æ—à–∏–∫' : '–ù–µ–º–∞—î –≤ –Ω–∞—è–≤–Ω–æ—Å—Ç—ñ'}
                  </button>
                </div>
              </div>
            </div>
          ))}
        </div>

        {filteredProducts.length === 0 && (
          <div className="no-products">
            <div className="no-products-icon">üòî</div>
            <h3>–¢–æ–≤–∞—Ä–∏ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ</h3>
            <p>–°–ø—Ä–æ–±—É–π—Ç–µ –∑–º—ñ–Ω–∏—Ç–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–∏ –ø–æ—à—É–∫—É –∞–±–æ –≤–∏–±—Ä–∞—Ç–∏ —ñ–Ω—à—É –∫–∞—Ç–µ–≥–æ—Ä—ñ—é</p>
          </div>
        )}
      </div>
    </div>
  );
};

export default CatalogPage;