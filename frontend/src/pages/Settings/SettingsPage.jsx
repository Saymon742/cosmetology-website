import React, { useState, useEffect } from 'react';
import { useApp } from '../../context/AppContext';
import { Link, useNavigate } from 'react-router-dom';
import './SettingsPage.css';

const SettingsPage = () => {
  const { user, login, logout, loginAsAdmin, theme, setTheme, updateTrigger } = useApp();
  const [settings, setSettings] = useState({
    name: user?.name || '',
    email: user?.email || '',
    phone: user?.phone || '',
    notifications: true,
    newsletter: true,
    smsNotifications: false
  });
  
  const [activeTab, setActiveTab] = useState('profile');
  const navigate = useNavigate(); 
  useEffect(() => {
    if (user?.role === 'admin') {
      console.log('User is now admin, redirecting...');
      setTimeout(() => {
        navigate('/admin');
      }, 100);
    }
  }, [user, navigate, updateTrigger]);

  const handleInputChange = (e) => {
    const { name, value, type, checked } = e.target;
    setSettings(prev => ({
      ...prev,
      [name]: type === 'checkbox' ? checked : value
    }));
  };

  const handleSaveSettings = (e) => {
    e.preventDefault();
    if (settings.name && settings.email) {
      login({ 
        name: settings.name, 
        email: settings.email,
        phone: settings.phone
      });
      alert('–ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è —É—Å–ø—ñ—à–Ω–æ –∑–±–µ—Ä–µ–∂–µ–Ω–æ!');
    }
  };

  const handleAdminLogin = () => {
    console.log('Admin login button clicked');
    loginAsAdmin();
    alert('–í–∏ —É–≤—ñ–π—à–ª–∏ —è–∫ –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä! –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è—î–º–æ –¥–æ –ø–∞–Ω–µ–ª—ñ –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–∞...');
  };

  const tabs = [
    { id: 'profile', label: '–ü—Ä–æ—Ñ—ñ–ª—å', icon: 'üë§' },
    { id: 'notifications', label: '–°–ø–æ–≤—ñ—â–µ–Ω–Ω—è', icon: 'üîî' },
    { id: 'appearance', label: '–ó–æ–≤–Ω—ñ—à–Ω—ñ–π –≤–∏–≥–ª—è–¥', icon: 'üé®' },
    { id: 'admin', label: '–ê–¥–º—ñ–Ω—ñ—Å—Ç—Ä—É–≤–∞–Ω–Ω—è', icon: 'üëë' }
  ];

  return (
    <div className="settings-page">
      <div className="container">
        <div className="settings-header">
          <h1>–ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è</h1>
          {user && (
            <div className="user-info">
              <span>–í–∏ —É–≤—ñ–π—à–ª–∏ —è–∫: <strong>{user.name}</strong></span>
              {user.role === 'admin' && <span className="admin-badge">–ê–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä</span>}
              <button onClick={logout} className="logout-btn">–í–∏–π—Ç–∏</button>
            </div>
          )}
        </div>

        <div className="settings-content">
          <div className="settings-sidebar">
            <div className="sidebar-tabs">
              {tabs.map(tab => (
                <button
                  key={tab.id}
                  className={`tab-btn ${activeTab === tab.id ? 'active' : ''}`}
                  onClick={() => setActiveTab(tab.id)}
                >
                  <span className="tab-icon">{tab.icon}</span>
                  {tab.label}
                </button>
              ))}
            </div>
          </div>

          <div className="settings-main">
            <form onSubmit={handleSaveSettings} className="settings-form">
              
              {activeTab === 'profile' && (
                <div className="tab-content">
                  <h2>–û—Å–æ–±–∏—Å—Ç–∞ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è</h2>
                  <div className="form-grid">
                    <div className="form-group">
                      <label htmlFor="name">–Ü–º'—è —Ç–∞ –ø—Ä—ñ–∑–≤–∏—â–µ</label>
                      <input
                        type="text"
                        id="name"
                        name="name"
                        value={settings.name}
                        onChange={handleInputChange}
                        placeholder="–í–≤–µ–¥—ñ—Ç—å –≤–∞—à–µ —ñ–º'—è"
                      />
                    </div>

                    <div className="form-group">
                      <label htmlFor="email">Email –∞–¥—Ä–µ—Å–∞</label>
                      <input
                        type="email"
                        id="email"
                        name="email"
                        value={settings.email}
                        onChange={handleInputChange}
                        placeholder="–í–≤–µ–¥—ñ—Ç—å –≤–∞—à email"
                      />
                    </div>

                    <div className="form-group">
                      <label htmlFor="phone">–¢–µ–ª–µ—Ñ–æ–Ω</label>
                      <input
                        type="tel"
                        id="phone"
                        name="phone"
                        value={settings.phone}
                        onChange={handleInputChange}
                        placeholder="+38 (096) 123-45-67"
                      />
                    </div>
                  </div>
                </div>
              )}

              {activeTab === 'admin' && (
                <div className="tab-content">
                  <h2>–ê–¥–º—ñ–Ω—ñ—Å—Ç—Ä—É–≤–∞–Ω–Ω—è</h2>
                  
                  {user?.role === 'admin' ? (
                    <div className="admin-access-granted">
                      <div className="admin-welcome">
                        <div className="admin-icon">üëë</div>
                        <h3>–í–∏ –º–∞—î—Ç–µ –ø—Ä–∞–≤–∞ –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–∞</h3>
                        <p>–¢–µ–ø–µ—Ä –≤–∏ –º–æ–∂–µ—Ç–µ –∫–µ—Ä—É–≤–∞—Ç–∏ –ø–∞–Ω–µ–ª–ª—é –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–∞</p>
                      </div>
                      
                      <div className="admin-actions">
                        <Link to="/admin" className="admin-panel-btn">
                          –ü–µ—Ä–µ–π—Ç–∏ –¥–æ –ø–∞–Ω–µ–ª—ñ –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–∞
                        </Link>
                      </div>
                    </div>
                  ) : (
                    <div className="admin-access-request">
                      <div className="admin-info">
                        <div className="admin-icon">üîí</div>
                        <h3>–ü–∞–Ω–µ–ª—å –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–∞</h3>
                        <p>–î–ª—è –¥–æ—Å—Ç—É–ø—É –¥–æ –ø–∞–Ω–µ–ª—ñ –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –ø–æ—Ç—Ä—ñ–±–Ω—ñ —Å–ø–µ—Ü—ñ–∞–ª—å–Ω—ñ –ø—Ä–∞–≤–∞</p>
                        <ul className="admin-features">
                          <li>üìä –ü–µ—Ä–µ–≥–ª—è–¥ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –ø—Ä–æ–¥–∞–∂—ñ–≤</li>
                          <li>üì¶ –ö–µ—Ä—É–≤–∞–Ω–Ω—è –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è–º–∏</li>
                          <li>üë• –£–ø—Ä–∞–≤–ª—ñ–Ω–Ω—è –∫–ª—ñ—î–Ω—Ç–∞–º–∏</li>
                          <li>üè∑Ô∏è –†–µ–¥–∞–≥—É–≤–∞–Ω–Ω—è —Ç–æ–≤–∞—Ä—ñ–≤</li>
                        </ul>
                      </div>
                      
                      <div className="admin-request">
                        <p>–Ø–∫—â–æ –≤–∏ –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä, —É–≤—ñ–π–¥—ñ—Ç—å —É —Ä–µ–∂–∏–º—ñ –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–∞:</p>
                        <button 
                          type="button" 
                          onClick={handleAdminLogin}
                          className="btn btn-primary admin-login-btn"
                        >
                          üëë –£–≤—ñ–π—Ç–∏ —è–∫ –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä
                        </button>
                        <p className="admin-note">
                          –ü—Ä–∏–º—ñ—Ç–∫–∞: –¶—è –¥—ñ—è –Ω–∞–¥–∞—Å—Ç—å –≤–∞–º –ø–æ–≤–Ω–∏–π –¥–æ—Å—Ç—É–ø –¥–æ —Å–∏—Å—Ç–µ–º–∏ —É–ø—Ä–∞–≤–ª—ñ–Ω–Ω—è
                        </p>
                      </div>
                    </div>
                  )}
                </div>
              )}

                           {activeTab === 'notifications' && (
                <div className="tab-content">
                  <h2>–ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è —Å–ø–æ–≤—ñ—â–µ–Ω—å</h2>
                  <div className="checkbox-group">
                    <label className="checkbox-label">
                      <input
                        type="checkbox"
                        name="notifications"
                        checked={settings.notifications}
                        onChange={handleInputChange}
                      />
                      <span className="checkmark"></span>
                      –°–ø–æ–≤—ñ—â–µ–Ω–Ω—è –ø—Ä–æ —Å—Ç–∞—Ç—É—Å –∑–∞–º–æ–≤–ª–µ–Ω—å
                    </label>
                    
                    <label className="checkbox-label">
                      <input
                        type="checkbox"
                        name="newsletter"
                        checked={settings.newsletter}
                        onChange={handleInputChange}
                      />
                      <span className="checkmark"></span>
                      –†–æ–∑—Å–∏–ª–∫–∞ –Ω–æ–≤–∏–Ω —Ç–∞ –∞–∫—Ü—ñ–π
                    </label>
                    
                    <label className="checkbox-label">
                      <input
                        type="checkbox"
                        name="smsNotifications"
                        checked={settings.smsNotifications}
                        onChange={handleInputChange}
                      />
                      <span className="checkmark"></span>
                      SMS-—Å–ø–æ–≤—ñ—â–µ–Ω–Ω—è
                    </label>
                  </div>
                </div>
              )}

              {activeTab === 'appearance' && (
                <div className="tab-content">
                  <h2>–ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –∑–æ–≤–Ω—ñ—à–Ω—å–æ–≥–æ –≤–∏–≥–ª—è–¥—É</h2>
                  <div className="form-group">
                    <label htmlFor="theme">–ö–æ–ª—å–æ—Ä–æ–≤–∞ —Ç–µ–º–∞</label>
                    <select
                      id="theme"
                      value={theme}
                      onChange={(e) => setTheme(e.target.value)}
                      className="theme-select"
                    >
                      <option value="light">üåû –°–≤—ñ—Ç–ª–∞</option>
                      <option value="dark">üåô –¢–µ–º–Ω–∞</option>
                      <option value="auto">‚öôÔ∏è –°–∏—Å—Ç–µ–º–Ω–∞</option>
                    </select>
                  </div>
                </div>
              )}
            </form>
          </div>
        </div>
      </div>
    </div>
  );
};

export default SettingsPage;